version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: invastop-db
    environment:
      POSTGRES_DB: invastop
      POSTGRES_USER: invastop_user
      POSTGRES_PASSWORD: invastop_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - invastop-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: invastop-backend
    environment:
      - DATABASE_URL=postgresql://invastop_user:invastop_password@postgres:5432/invastop
      - SECRET_KEY=your-secret-key-change-in-production
      - DEBUG=True
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
    networks:
      - invastop-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: invastop-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - invastop-network
    command: npm start

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: invastop-redis
    ports:
      - "6379:6379"
    networks:
      - invastop-network

volumes:
  postgres_data:

networks:
  invastop-network:
    driver: bridge
